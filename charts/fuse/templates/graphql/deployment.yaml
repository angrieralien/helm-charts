apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "fuse.fullname" . }}-graphql
  labels:
    {{- include "fuse.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.graphql.replicaCount | default 1 }}
  selector:
    matchLabels:
      {{- include "fuse.selectorLabels" . | nindent 6 }}
      fuse-component: graphql
  template:
    metadata:
      {{- with .Values.graphql.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "fuse.selectorLabels" . | nindent 8 }}
        fuse-component: graphql
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "fuse.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.graphql.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-graphql
          securityContext:
            {{- toYaml .Values.graphql.securityContext | nindent 12 }}
          image: "{{ .Values.graphql.image.repository }}:{{ .Values.graphql.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.graphql.image.pullPolicy }}
          # TODO(patrickdevivo) implement health checks
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
            {{- toYaml .Values.graphql.resources | nindent 12 }}
          env:
            {{- if .Values.graphql.env }}
            {{- include "common.tplvalues.render" (dict "value" .Values.graphql.env "context" $ ) | nindent 12 }}
            {{- end }}
          args:
            - "--connection"
            - "$(POSTGRES_CONNECTION)"
            - "--port"
            - "5433"
            - "--schema"
            - "mergestat,public"
            - "--append-plugins"
            - "@graphile-contrib/pg-simplify-inflector,postgraphile-plugin-connection-filter,/graphql/exec-sql/index.js,/graphql/service-credentials/index.js"
            - "-o"
            - "--subscriptions"
            - "--retry-on-init-fail"
            - "--dynamic-json"
            - "--no-setof-functions-contain-nulls"
            - "--no-ignore-rbac"
            - "--extended-errors=errcode"
            - "--disable-graphiql"
            - "--enable-query-batching"
            - "--disable-query-log"
            - "--legacy-relations=omit"
      {{- with .Values.graphql.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphql.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.graphql.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
